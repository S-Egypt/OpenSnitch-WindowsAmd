name: Build status

on:
  push:
    paths:
      - 'daemon/**'
      - '.github/workflows/go.yml'
  pull_request:
    paths:
      - 'daemon/**'
      - '.github/workflows/go.yml'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-daemon:  # Existing job for building the Go daemon
    name: Build Daemon
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.21.13
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Get dependencies
        run: |
          sudo apt-get install git libnetfilter-queue-dev libmnl-dev libpcap-dev protobuf-compiler
          export GOPATH=~/go
          export PATH=$PATH:$GOPATH/bin
          go install github.com/golang/protobuf/protoc-gen-go@latest
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.34.1
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.3.0
          cd proto
          make ../daemon/ui/protocol/ui.pb.go
          cd ../daemon
          go mod tidy; go mod vendor

      - name: Build
        run: |
          cd daemon
          go build -v .
      - name: Test
        run: |
          cd daemon
          sudo PRIVILEGED_TESTS=1 NETLINK_TESTS=1 go test ./...

  build-windows:  # New job for building the Windows executable
    name: Build Windows Executable
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Dependencies
        shell: pwsh
        run: |
          # Install Go
          choco install golang --version=1.21.5 -y --force
          $env:PATH += ";$env:GOROOT\bin;$env:GOPATH\bin"

          # Install Make
          choco install make -y --force

          # Install Git (required for some dependencies)
          choco install git -y --force

          # Verify installations
          go version
          make --version
          git --version

      - name: Build OpenSnitch
        shell: pwsh
        run: |
          make build-windows-amd64

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: opensnitch-windows-amd64
          path: bin/windows_amd64/opensnitch.exe
